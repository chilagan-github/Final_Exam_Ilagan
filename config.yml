---
- hosts: ubcent
  become: true
  tasks:

  - name: motd player
    copy: 
        content: "Ansible Managed by hideki\n"
        dest: /etc/motd

  - name: install apache and php for Ubuntu servers
    tags: apache, apache2, ubuntu
    apt:
      name:
        - apache2
        - libapache2-mod-php
      state: latest
      update_cache: yes
    when: ansible_distribution == "Ubuntu"
    
  - name: install apache and php for CENTOS servers
    tags: apache, centos, httpd
    dnf:
      name:
        - httpd
        - php
      state: latest
    when: ansible_distribution == "CentOS"

  - name: start httpd (CentOS)
    tags: apache, centos, httpd
    service:
      name: httpd
      state: started
    when: ansible_distribution == "CentOS"

  - name: Add GPG key for the Prometheus repository (Ubuntu)
    apt_key:
      url: https://packages.grafana.com/gpg.key
      state: present
    when: ansible_distribution == "Ubuntu"

  - name: Add Prometheus APT repository (Ubuntu)
    apt_repository:
      repo: deb https://packages.grafana.com/oss/deb stable main
      state: present
      filename: grafana
    when: ansible_distribution == "Ubuntu"

  - name: Install Prometheus (Ubuntu)
    apt:
      name: prometheus
      state: present
    when: ansible_distribution == "Ubuntu"

  - name: Enable and start Prometheus service (Ubuntu)
    service:
      name: prometheus
      enabled: yes
      state: started
    when: ansible_distribution == "Ubuntu"

  - name: Open port 9090 for Prometheus (Ubuntu)
    ufw:
      rule: allow
      port: 9090
      proto: tcp
      state: enabled
    when: ansible_distribution == "Ubuntu"

  - name: Download Prometheus(CentOS)
    get_url:
      url: "https://github.com/prometheus/prometheus/releases/download/v3.0.0-beta.1/prometheus-3.0.0-beta.1.linux-amd64.tar.gz"
      dest: /tmp/prometheus.tar.gz
    when: ansible_distribution == "CentOS"

  - name: Extract Prometheus (CentOS)
    ansible.builtin.shell: tar -zxvf /tmp/prometheus.tar.gz -C /tmp/
    when: ansible_distribution == "CentOS"

  - name: Create Prometheus user (CentOS)
    ansible.builtin.user:
      name: prometheus
      state: present
    when: ansible_distribution == "CentOS"

  - name: Create Prometheus directory (CentOS)
    ansible.builtin.file:
      path: /opt/prometheus
      state: directory
    when: ansible_distribution == "CentOS"

  - name: Set ownership and permissions for Prometheus (CentOS)
    ansible.builtin.file:
      path: /opt/prometheus
      owner: prometheus
      group: prometheus
      mode: '0755'
    when: ansible_distribution == "CentOS"

  - name: Create Prometheus service file (CentOS)
    ansible.builtin.template:
      src: prometheus.service.j2
      dest: /etc/systemd/system/prometheus.service
    when: ansible_distribution == "CentOS"

  - name: Reload systemd (CentOS)
    ansible.builtin.command: systemctl daemon-reload
    when: ansible_distribution == "CentOS"

  - name: Start Prometheus service (CentOS)
    ansible.builtin.service:
      name: prometheus
      enabled: yes
      state: started
    when: ansible_distribution == "CentOS"

  - name: Ensure firewalld service is running (CentOS)
    ansible.builtin.service_facts:
      gather_subset:
        - services
    when: ansible_distribution == "CentOS"

  - name: Check if firewalld is active (CentOS)
    ansible.builtin.debug:
      msg: "Firewalld is running"
    when: ansible_distribution == "CentOS" and ansible_facts.services['firewalld'] is defined and ansible_facts.services['firewalld'].state == 'running'

  - name: Open port 9090 for Prometheus using nft (CentOS, if firewalld not active)
    ansible.builtin.shell: nft add rule inet filter input tcp dport 9090 accept
    when: ansible_distribution == "CentOS" and (ansible_facts.services['firewalld'] is not defined or ansible_facts.services['firewalld'].state != 'running')

  - name: Open port 9090 for Prometheus using firewalld (CentOS, if firewalld is active)
    ansible.builtin.firewalld:
      service: prometheus
      port: 9090/tcp
      permanent: yes
      state: enabled
    when: ansible_distribution == "CentOS" and ansible_facts.services['firewalld'].state == 'running'

  - name: Ensure Prometheus on system boot (CentOS)
    ansible.builtin.service:
      name: prometheus
      enabled: yes
    when: ansible_distribution == "CentOS"

